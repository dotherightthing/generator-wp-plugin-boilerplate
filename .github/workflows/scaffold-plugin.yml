# https://stackoverflow.com/questions/59518658/how-to-use-github-release-version-number-in-github-action
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows#release-event-release
# https://help.github.com/en/actions/reference/events-that-trigger-workflows#release-event-release
# https://help.github.com/en/actions/configuring-and-managing-workflows/persisting-workflow-data-using-artifacts#passing-data-between-jobs-in-a-workflow

name: Scaffold a plugin and generate a release

on: push

jobs:
  build:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [ '13.x' ]

    steps:
    # check out the repository, so the workflow can access it
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.2.15'
        node-version: ${{ matrix.node }}

    # Downgrade from Composer 2 in ubuntu-latest, to Composer 1, as v2 causes issues
    # https://github.com/actions/virtual-environments/issues/1816
    # Fix: https://github.com/actions/virtual-environments/issues/1924
    - name: Make sure we are using composer v1
      run: |
        sudo composer self-update --1
        sudo chown $USER $HOME/.composer


    - name: Install Expect, to automate user interactions with the Yeoman plugin generator
      run: sudo apt-get install expect

    # Fix Cypress cannot write to the cache directory due to file permissions
    # https://github.com/cypress-io/cypress/issues/1281
    - name: Grant Cypress permission to download to cache directory
      run: |
        sudo chown $USER $HOME/.cache
    
    # https://github.com/cypress-io/github-action#install-cypress-only
    - name: Cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          ~/.cache
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Composer config
      run: |
        composer config -g github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

    - name: Install plugin dependencies
      run: |
        npm ci
        npm install --global yo
        
    - name: Symlink the package to make the generator available via the commandline
      run: |
        npm link

    - name: Scaffold the plugin
      run: |
        ./scripts/yo.sh

    - name: Copy built files to release folder
      run: npm run release --if-present

    # https://help.github.com/en/actions/configuring-and-managing-workflows/persisting-workflow-data-using-artifacts
    - name: Archive release folder
      uses: actions/upload-artifact@v1
      with:
        name: release
        path: release

    - name: Archive changelog
      uses: actions/upload-artifact@v1
      with:
        name: changelog
        path: CHANGELOG.md